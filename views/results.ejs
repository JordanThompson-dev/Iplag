<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>IPLAG - RESULTS</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/stylesheets/style.css">

</head>

<style>



</style>

<body>
    <nav style="background:#801cd9; padding:10px 20px">
        <a  style="background:#801cd9;font-size:30px;color:white;font-family:'Poppins'; font-weight: 600;">iPLAG</a>
    </nav>

    <div class="result_header">
        <h1>RESULTS</h1>
    </div>

    <table>
    <thead>
        <tr>
          <th>File 1</th>
          <th>File 2</th>
          <th>Similarity</th>
          
        </tr>
    </thead>
    <tbody id="tbody" data-results = "<%= JSON.stringify(results) %>">
	
    <% results.forEach((pair)=>{%>
        
            <tr class="<%= pair.plag ? 'warning': 'success' %>">
              <td><%=pair.file1 %></td>
              <td><%= pair.file2 %></td>
              <td><%= pair.similarity.toFixed(6)%></td>
            </tr>
    


    <% }) %>
    </tbody>
	</table>
	

	<!-- Load d3.js -->
	<script src="https://d3js.org/d3.v6.js"></script>
          
	<!-- Create a div where the graph will take place -->
	<div id="my_dataviz"></div>


	<script>

		var data = JSON.parse(document.getElementById('tbody').dataset.results);
		
		var axis_domain = new Set();
		axis_domain.add("X");

		data.forEach((d)=>{
			 axis_domain.add(d.file1)
			 axis_domain.add(d.file2)
		})


		// set the dimensions and margins of the graph
		const margin = {top: 10, right: 20, bottom: 30, left: 50},
			width = 500 - margin.left - margin.right,
			height = 420 - margin.top - margin.bottom;
		
		// append the svg object to the body of the page
		const svg = d3.select("#my_dataviz")
		  .append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
		  .append("g")
			.attr("transform", `translate(${margin.left},${margin.top})`);
		
		  // Add X axis

		var x = d3.scalePoint()
				.domain(axis_domain)         
				.range([0, width]);       

		svg.append("g")
		.attr("transform", `translate(0, ${height})`)
		.call(d3.axisBottom(x));
		
		  // Add Y axis
		const y = d3.scalePoint()
				 .domain(axis_domain)  
				 .range([ height, 0]);
		  
		svg.append("g")
		.call(d3.axisLeft(y));
		
		  // Add a scale for bubble size
		const z = d3.scaleLinear()
				.domain([200000, 1310000000])
				.range([ 1, 40]);
	
		// Add dots
		svg.append('g')
		.selectAll("dot")
		.data(data)
		.join("circle")
			.attr("cx", d => x(d.file1))
			.attr("cy", d => y(d.file2))
			.attr("r", d => z(d.gsim))
			.style("fill", "#f20d8345")
			.style("opacity", 0.8)
			.attr("stroke", "black")
		
		
		
		</script>

<footer class="footer">
	<p>Copyright &copy; 2021 All rights reserved.</p>
  </footer>
</body>
</html>

          

      